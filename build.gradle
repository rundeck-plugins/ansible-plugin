plugins {
    id 'java'
    id 'groovy'
    id 'idea'
    alias(libs.plugins.axionRelease)
    alias(libs.plugins.nexusPublish)
}

group = 'org.rundeck.plugins'

ext.pluginName = 'Ansible Integration'
ext.publishDescription = 'This plugin brings basic Ansible support to Rundeck. It imports hosts from Ansible\'s inventory, including a bunch of facts, and can run modules and playbooks. There is also a node executor and file copier for your project.'
ext.publishName = "Ansible Plugin ${project.version}"
ext.githubSlug = 'rundeck-plugins/ansible-plugin'
ext.developers = [
    [id: 'gschueler', name: 'Greg Schueler', email: 'greg@rundeck.com'],
    [id: 'daisuke-yoshimoto', name: 'Daisuke Yoshimoto', email: 'yoshimoto@gmail.com']
]
ext.rundeckPluginVersion = '1.2'
ext.pluginClassNames = [
    'com.rundeck.plugins.ansible.plugin.AnsibleResourceModelSourceFactory',
    'com.rundeck.plugins.ansible.plugin.AnsibleNodeExecutor',
    'com.rundeck.plugins.ansible.plugin.AnsibleFileCopier',
    'com.rundeck.plugins.ansible.plugin.AnsiblePlaybookWorkflowStep',
    'com.rundeck.plugins.ansible.plugin.AnsiblePlaybookInlineWorkflowStep',
    'com.rundeck.plugins.ansible.plugin.AnsibleModuleWorkflowStep',
    'com.rundeck.plugins.ansible.plugin.AnsiblePlaybookWorflowNodeStep',
    'com.rundeck.plugins.ansible.plugin.AnsiblePlaybookInlineWorkflowNodeStep',
    'com.rundeck.plugins.ansible.logging.AnsibleSetStatsFilterPlugin',
    'com.rundeck.plugins.ansible.plugin.AnsiblePluginGroup'
].join(',')

scmVersion {
    tag {
        prefix = 'v'
        versionSeparator = ''
    }
    ignoreUncommittedChanges = false
}

allprojects {
    project.version = scmVersion.version
    apply from: "${rootDir}/gradle/java.gradle"
}

repositories {
    mavenCentral()
}

configurations {
    pluginLibs

    implementation {
        extendsFrom pluginLibs
    }
}

dependencies {
    pluginLibs libs.gson
    implementation(libs.rundeckCore) {
        exclude group: "com.google.guava"
    }
    implementation libs.groovyAll
    pluginLibs libs.jacksonCore
    pluginLibs libs.jacksonYaml
    implementation libs.snakeyaml

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok

    testImplementation libs.bundles.testLibs
}

task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.pluginLibs
}

jar {
    from "$buildDir/output"
    manifest {
        def libList = configurations.pluginLibs.collect{'lib/' + it.name}.join(' ')
        attributes 'Rundeck-Plugin-Version': rundeckPluginVersion,
                   'Rundeck-Plugin-Archive': 'true',
                   'Rundeck-Plugin-File-Version': project.version,
                   'Rundeck-Plugin-Name' : pluginName,
                   'Rundeck-Plugin-Description' : publishDescription,
                   'Rundeck-Plugin-Rundeck-Compatibility-Version': '3.0.1+',
                   'Rundeck-Plugin-Tags': 'java,node executor,resource model,workflow step,ansible',
                   'Rundeck-Plugin-License': 'MIT',
                   'Rundeck-Plugin-Source-Link': 'https://github.com/rundeck-plugins/ansible-plugin',
                   'Rundeck-Plugin-Target-Host-Compatibility': 'all',
                   'Rundeck-Plugin-Author': 'David Kirstein',
                   'Rundeck-Plugin-Classnames': pluginClassNames,
                   'Rundeck-Plugin-URL': 'https://github.com/rundeck-plugins/ansible-plugin',
                   'Rundeck-Plugin-Libs': "${libList}",
                   'Rundeck-Plugin-Date': new Date().format("yyyy-MM-dd'T'HH:mm:ssX")
    }
    dependsOn(copyToLib)
}

test {
    useJUnitPlatform()
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    failOnError = false
}

nexusPublishing {
    packageGroup = 'org.rundeck.plugins'
    repositories {
        sonatype()
    }
}

apply from: "${rootDir}/gradle/publishing.gradle"